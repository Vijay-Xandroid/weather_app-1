// Generated by view binder compiler. Do not edit!
package com.vita.weatherforecast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.vita.weatherforecast.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemForecastBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ConstraintLayout forecastCard;

  @NonNull
  public final ImageView imageViewForecastIcon;

  @NonNull
  public final TextView tempMaxText;

  @NonNull
  public final TextView tempMinText;

  @NonNull
  public final TextView textViewDayOfWeek;

  @NonNull
  public final TextView textViewTemp;

  @NonNull
  public final TextView textViewTimeOfDay;

  private ItemForecastBinding(@NonNull MaterialCardView rootView,
      @NonNull ConstraintLayout forecastCard, @NonNull ImageView imageViewForecastIcon,
      @NonNull TextView tempMaxText, @NonNull TextView tempMinText,
      @NonNull TextView textViewDayOfWeek, @NonNull TextView textViewTemp,
      @NonNull TextView textViewTimeOfDay) {
    this.rootView = rootView;
    this.forecastCard = forecastCard;
    this.imageViewForecastIcon = imageViewForecastIcon;
    this.tempMaxText = tempMaxText;
    this.tempMinText = tempMinText;
    this.textViewDayOfWeek = textViewDayOfWeek;
    this.textViewTemp = textViewTemp;
    this.textViewTimeOfDay = textViewTimeOfDay;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemForecastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemForecastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_forecast, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemForecastBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forecastCard;
      ConstraintLayout forecastCard = ViewBindings.findChildViewById(rootView, id);
      if (forecastCard == null) {
        break missingId;
      }

      id = R.id.imageViewForecastIcon;
      ImageView imageViewForecastIcon = ViewBindings.findChildViewById(rootView, id);
      if (imageViewForecastIcon == null) {
        break missingId;
      }

      id = R.id.tempMaxText;
      TextView tempMaxText = ViewBindings.findChildViewById(rootView, id);
      if (tempMaxText == null) {
        break missingId;
      }

      id = R.id.tempMinText;
      TextView tempMinText = ViewBindings.findChildViewById(rootView, id);
      if (tempMinText == null) {
        break missingId;
      }

      id = R.id.textViewDayOfWeek;
      TextView textViewDayOfWeek = ViewBindings.findChildViewById(rootView, id);
      if (textViewDayOfWeek == null) {
        break missingId;
      }

      id = R.id.textViewTemp;
      TextView textViewTemp = ViewBindings.findChildViewById(rootView, id);
      if (textViewTemp == null) {
        break missingId;
      }

      id = R.id.textViewTimeOfDay;
      TextView textViewTimeOfDay = ViewBindings.findChildViewById(rootView, id);
      if (textViewTimeOfDay == null) {
        break missingId;
      }

      return new ItemForecastBinding((MaterialCardView) rootView, forecastCard,
          imageViewForecastIcon, tempMaxText, tempMinText, textViewDayOfWeek, textViewTemp,
          textViewTimeOfDay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
